{
    "useState": {
        "prefix": "us",
        "body": [
            "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<${2:any}>($3);$0"
        ],
        "description": "Any useState, react/react-native"
    },
    "useStateBoolean": {
        "prefix": "usb",
        "body": [
            "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<boolean>(${2:false});$0"
        ],
        "description": "Boolean useState, react/react-native"
    },
    "useStateString": {
        "prefix": "uss",
        "body": [
            "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<string>(${2:''});$0"
        ],
        "description": "String useState, react/react-native"
    },
    "useStateNumber": {
        "prefix": "usn",
        "body": [
            "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<number>(${2:0});$0"
        ],
        "description": "Number useState, react/react-native"
    },
    "useState[]": {
        "prefix": "us[]",
        "body": [
            "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<${2:any}[]>(${3:[]});$0"
        ],
        "description": "Array of any useState, react/react-native"
    },
    "useEffect": {
        "prefix": "ue",
        "body": [
            "useEffect(() => {",
            "\t$1",
            "}, [${3}]);$0"
        ],
        "description": "A simple useEffect"
    },
    "useEffectWithCleanUp": {
        "prefix": "uecup",
        "body": [
            "useEffect(() => {",
            "\t$1",
            "\n\treturn () => {",
            "\t\t$2",
            "\t}",
            "}, [${3}]);$0"
        ],
        "description": "A useEffect with cleanUp funcirion"
    },
    "useRef": {
        "prefix": "ur",
        "body": [
            "const ${1:anyRef} = useRef($2)$0"
        ],
        "description": "A simple useRef, react/react native"
    }
}
